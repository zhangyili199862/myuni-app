<template>
	<view class="page">

		<live-pusher id='livePusher' ref="livePusher" class="livePusher" :url="url" :mode="mode"
			:enable-camera="enableCamera" :auto-focus="true" :device-position="position" :beauty="beauty"
			:whiteness="whiteness" aspect="9:16" @statechange="statechange" @netstatus="netstatus" @error="error"
			:style="'height: '+windowHeight+'px;'" style="width: 750rpx;"></live-pusher>

		<!-- 头部 -->
		<view style="position: fixed;left: 0;right: 0;" :style="'top:'+statusBarHeight+'px'">
			<!-- 个人信息|观看详细信息 -->
			<view style="height: 80rpx;" class="px-2 flex justify-between align-center">
				<view style="width: 325rpx;background-color: rgba(0,0,0,0.4);" class="flex rounded-circle">
					<view class="p">
						<image src="/static/tabbar/min.png" style="width: 70rpx;height: 70rpx;" class="rounded-circle">
						</image>
					</view>
					<view class="flex-1 flex flex-column justify-center">
						<text class="text-white font">昵称</text>
						<text class="text-white font-sm">100</text>
					</view>
					<view class="p">
						<view class="rounded-circle flex align-center justify-center bg-danger"
							style="width: 70rpx;height: 70rpx;">
							<text class="text-white">+</text>
						</view>
					</view>
				</view>

				<view style="width: 325rpx;background-color: rgba(0,0,0,0.4);" class="flex rounded-circle">
					<scroll-view scroll-x="true" class="flex-1 flex">
						<view class="p" v-for="i in 20" :key="i">
							<image src="/static/tabbar/min.png" style="width: 70rpx;height: 70rpx;"
								class="rounded-circle"></image>
						</view>
					</scroll-view>
					<view class="p">
						<view class="rounded-circle flex align-center justify-center bg-danger"
							style="width: 70rpx;height: 70rpx;">
							<text class="text-white font-sm">1000</text>
						</view>
					</view>
				</view>
			</view>
			<!-- 金币 -->
			<view style="height: 80rpx;" class="px-2 my-2">
				<view style="width: 325rpx;background-color: rgba(0,0,0,0.4);" class="flex rounded-circle align-center">
					<view class="p">
						<text class="text-warning">金币</text>
					</view>
					<view class="flex-1 flex flex-column justify-center">
						<text class="text-white font">100</text>
					</view>
				</view>
			</view>
			<!-- 收到礼物 -->
			<f-gift ref="gift"></f-gift>
		</view>

		<!-- 弹幕 -->
		<f-danmu ref="danmu"></f-danmu>

		<!-- 底部 -->
		<view style="position: fixed;left: 0;bottom: 0;right: 0;height: 120rpx;"
			class="flex align-center justify-between">
			<view class="flex-1 flex flex-column align-center justify-center" v-for="(item,index) in btns" :key="index"
				@click="handleButtonEvent(item)">
				<text class="iconfont text-white mb-1">{{item.icon}}</text>
				<text class="text-white font">{{item.name}}</text>
			</view>
		</view>
		<uni-popup type="bottom" ref="popup">
			<view class="bg-white">
				<view class="flex justify-center align-center border-bottom" style="height: 90rpx;">
					<text class="font-md">{{popupTitle}}</text>
				</view>
				<!-- 画质选择 -->
				<view v-if="popUpType==='mode'">
					<view class="flex align-center justify-center py-3" v-for="(item,index) in modelList" :key="index"
						:class="mode === item.type?'bg-main':''" @click="chooseMode(item.type)">
						<text class="font-md" :class="mode===item.type?'text-white':''">{{item.desc}}</text>
					</view>
				</view>
				<!-- 美颜 -->
				<view v-else-if="popUpType ==='beauty'" class="px-1">
					<slider :min="0" :max="9" :step="1" :value="beauty" show-value :block-size="18"
						@change="handleSilderChange"></slider>
				</view>
				<!-- 美白 -->
				<view v-else-if="popUpType==='whiteness'" class="px-1">
					<slider :min="0" :max="9" :step="1" :value="whiteness" show-value :block-size="18"
						@change="handleSilderChange"></slider>
				</view>
				<view v-else class="flex flex-wrap">
					<view class="flex justify-center align-center" style="width: 150rpx;height: 150rpx;">
						<text class="iconfont mb-1">&#xe611;</text>
						<text class="font">暂停</text>
					</view>
					<view class="flex justify-center align-center" style="width: 150rpx;height: 150rpx;" @click="back">
						<text class="iconfont  mb-1">&#xe64d;</text>
						<text class="font">退出</text>
					</view>
				</view>
				<view class="f-divider"></view>
				<view class="flex justify-center align-center" style="height: 90rpx;" @click="closePopup">取消</view>
			</view>
		</uni-popup>
	</view>
</template>

<script>
	import fGift from '@/components/live/f-gift.vue';
	import fDanmu from '@/components/live/f-danmu.vue';
	import uniPopup from '@/components/uni-ui/uni-popup/uni-popup.vue';

	import demoGifts from '@/demo/gifts.js';

	export default {
		components: {
			fGift,
			fDanmu,
			uniPopup
		},
		data() {
			return {
				statusBarHeight: 0,
				content: "",
				gifts: [],
				giftActiveId: 0,
				btns: [{
						name: "翻转",
						icon: "\ue605",
						event: "switchCamera"
					},
					{
						name: "画质",
						icon: "\ue60c",
						event: "openPopup",
						params: "mode"
					},
					{
						name: "美颜",
						icon: "\ue632",
						event: "openPopup",
						params: "beauty"
					},
					{
						name: "美白",
						icon: "\ue631",
						event: "openPopup",
						params: "whiteness"
					},
					{
						name: "更多",
						icon: "\ue84b",
						event: "openPopup",
						params: "more"
					}
				],
				//live-pusher 参数
				url: "",
				mode: "SD",
				enableCamera: true,
				position: "back",
				beauty: 0,
				whiteness: 0,
				windowHeight: 0,
				context: null,
				statusBarHeight: 0,
				modelList: [{
						type: "SD",
						desc: "标清"
					},
					{
						type: "HD",
						desc: "高清"
					},
					{
						type: "FHD",
						desc: "超清"
					}
				],
				popUpType: 'mode',
				showTheBars: true
			}
		},
		onLoad(e) {
			let res = uni.getSystemInfoSync()
			this.statusBarHeight = res.statusBarHeight
			// 演示
			this.windowHeight = res.windowHeight;
			this.gifts = demoGifts;

			let options = JSON.parse(e.options);
			const {
				mode,
				position,
				beauty,
				whiteness
			} = options;
			this.mode = mode;
			this.position = position;
			this.beauty = beauty;
			this.whiteness = whiteness;
		},
		onReady() {
			this.context = uni.createLivePusherContext('livePusher', this)
			this.startPreview()
		},
		mounted() {
			// 送礼物演示
			// setInterval(()=>{
			// 	this.$refs.gift.send({
			// 		username:"发送人",
			// 		avatar:"",
			// 		gift_name:"蛋糕",
			// 		gift_image:"/static/gift/3.png",
			// 		num:1
			// 	})
			// },3000)

			// 发送弹幕演示
			// let id = 1
			// setInterval(()=>{
			// 	this.$refs.danmu.send({
			// 		id:id,
			// 		name:"昵称"+id,
			// 		content:"测试内容"+id
			// 	})
			// 	id++
			// },3000)
		},
		methods: {
			handleButtonEvent(e) {
				this[e.event](e.params);
			},
			back() {
				uni.showModal({
					content: '是否要退出当前直播？',
					success: (res) => {
						if (res.confirm) {
							uni.navigateBack({
								delta: 1
							})
						}
					}
				})
			},
			// 开启预览
			startPreview() {
				this.context.startPreview({
					success: (e) => {
						console.log(e);
					}
				})
			},
			// 直播状态变化
			statechange(e) {
				console.log(e);
			},
			// 直播网络变化
			netstatus(e) {
				console.log(e);
			},
			error(e) {
				console.log(e);
			},
			//切换摄像头
			switchCamera() {
				this.context.switchCamera({
					success: (e) => {
						this.position = this.position === 'back' ? 'front' : 'back'
					}
				})
			},
			//切换画质
			openPopup(type) {
				this.popUpType = type;
				this.$refs.popup.open();
			},
			closePopup() {
				this.$refs.popup.close();
			},
			//选择画质
			chooseMode(item) {
				this.mode = item;
				uni.showToast({
					title: `切换画质成功`,
					icon: "none"
				})
				this.closePopup();
			},
			//切换美颜等级
			handleSilderChange(e) {
				this[this.popUpType] = e.detail.value;
			},
		},
		computed: {
			popupTitle() {
				let o = {
					mode: '画质',
					beauty: '美颜',
					whiteness: '美白',
					more: '更多'
				}
				return o[this.popUpType];
			}
		},
	}
</script>

<style>
	.page {
		flex: 1;
	}

	.btn {
		height: 80rpx;
		border-radius: 100rpx;
		background-color: rgba(255, 255, 255, 0.12);
		align-items: center;
		justify-content: center;
	}

	.btn-icon {
		width: 80rpx;
		margin-right: 20rpx;
	}
</style>
